#!/usr/bin/env perl
use strict;
use warnings;

use Number::Bytes::Human qw(format_bytes);

use constant TRUE => !! 1;
use constant FALSE => !! '';

sub percent_string($$$) {
    my ($val, $max_val, $max_len) = @_;
    return '#' x ($val * $max_len / $max_val);
}

sub read_volumes() {
    my $ZFS = '/sbin/zfs';
    my @volumes = ();
    
    open my $fh, '-|', "$ZFS list -o name,usedsnap -H -p" or die "can't call $ZFS: $!\n";
    while (my $line = <$fh>) {
	chomp $line;
	my ($name, $size) = split /\s+/, $line, 2;
	next unless defined $size;
	
	my $pool = $name;
	$pool =~ s|/.*$||;

	next if $pool eq $name;

	push @volumes, {
	    NAME => $name,
	    POOL => $pool,
	    SIZE => $size,
	};
    }
    close $fh or die "can't close $ZFS: $!\n";
    
    return @volumes;
}

sub is_contained($$@) {
    my ($field, $value, @list) = @_;
    foreach my $element (@list) {
	if ($element->{$field} eq $value) {
	    return TRUE;
	}
    }
    return FALSE;
}

sub filter_by_pool($@) {
    my $pool = shift;
    return grep { $_->{POOL} eq $pool } @_;
}

sub sort_by_size(@) {
    return sort { $a->{SIZE} <=> $b->{SIZE} } @_;
}

sub sum_size(@) {
    my $total_size = 0;
    $total_size += $_->{SIZE} foreach @_;
    return $total_size;
}

sub show_volumes(@) {
    my (@volumes) = @_;

    @volumes = sort_by_size @volumes;
    my $total_size = sum_size @volumes;
    my $max_size = $volumes[-1]->{SIZE};

    foreach my $volume (@volumes) {
	my $name = $volume->{NAME};
	my $size = $volume->{SIZE};
	my $histogram = percent_string($size, $max_size, 16);
	my $size_percent = $size * 100 / $total_size;
	my $size_readable = format_bytes( $size );
	printf "%16s  %3.0f%%  %4s  %s\n", $histogram, $size_percent, $size_readable, $name;
    }
}

sub show_snapshots($) {
    my ($volume) = @_;
    die "Display of snapshots for volume $volume requested,\nbut snapshot listing is not implemented yet.\n";
}

sub show_help() {
    print <<EOF
usage:
  list-zfs-snapshots              -  list all volumes
  list-zfs-snapshots <pool>       -  list all volumes from <pool>
  list-zfs-snapshots <volume>     -  list all snapshots from <volume>
  list-zfs-snapshots -h | --help  -  show this help
EOF
    ;
}

my @volumes = read_volumes;
my $command = shift @ARGV;

if (! defined $command or $command eq '') {
    show_volumes @volumes;
}
elsif ($command eq '-h' or $command eq '--help') {
    show_help;
}
elsif (is_contained 'POOL', $command, @volumes) {
    my $pool = $command;
    @volumes = filter_by_pool $pool, @volumes;
    show_volumes @volumes;
}
elsif (is_contained 'NAME', $command, @volumes) {
    my $volume = $command;
    show_snapshots $volume;
}
else {
    die "<$command> is neither a known pool nor a known volume\n";
}
